%% This program is free software; you can redistribute it and/or
%% modify it under the terms of the GNU General Public License
%% as published by the Free Software Foundation; either version 2
%% of the License, or (at your option) any later version.
%%
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with this program; if not, write to the Free Software
%% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
%%
%% Author: Martin R. Ehmsen, ehmsen@imada.sdu.dk.
%% Department of Mathematics and Computer Science,
%% University of Southern Denmark, DK
%%
%% You can find an online copy of the GPL at
%% http://www.gnu.org/copyleft/gpl.html .
%%
%% Note: shell-escape needs to be activated for this to work.
%% This can either be done by passing -shell-escape as an option to
%% latex or by adding/changing "shell_escape = t" in your texmf.cnf .

% 0.21 -> 0.3: Intermediate files are now stored with different filenames.
% The return code of each Python shell execution is stored in an .rc file.
% Any stderr output of a failed Python shell execution is inserted as
% a red verbatim in the resulting document.
%                                -- James Brotchie <brotchie@gmail.com>
%
% 0.2 -> 0.21: Moved \newwrite\@module from \@writemodule and out, since
% no more than 15 \newwrites are allowed (and the previous version created a new
% every time \@writemodule was called.
%
%modified by wanze   2013-11-21
%1.all output file into pyexport file folder
%2.output change to verbatiminput so it can change the line
%3.three mode
%mode0  not display sourcecode and note execute ,just not type the optional parameter
%mode1 display sourcecode(1) and not execute
%mode12  display sourcecode and use python2 execute(2)
%mode124 display sourcecode and use python2 execute and show result(4)
%mode13  display sourcecode and use python3 execute(3)
%mode134 display sourcecode and use python3 execute and show result(4)
%mode14 display sourcecode  and show result(4) please make use you already execute before


\NeedsTeXFormat{LaTeX2e}[1994/12/01]
\ProvidesPackage{python}[2013/11/21 v0.4 Python in LaTeX]
\RequirePackage{etoolbox}
\RequirePackage{fancyvrb}
\RequirePackage{verbatim}
\RequirePackage{color}
%\RequirePackage{ifplatform} %windows check
%\RequirePackage{boolexpr}

\newwrite\@out
\newwrite\@module
\newread\@retcode

% Put the resulting Python code in separate files.
\newcounter{@PythonEnvironmentCounter}
\setcounter{@PythonEnvironmentCounter}{1}
%if it doesnot have the pyexport filefold then creat it
\immediate\write18{if [ ! -d pyexport ];  then mkdir pyexport; fi}
%modified the py file name and the export file folder  as jobname1-1
\newcommand{\@outname}{pyexport/\jobname\thechapter-\arabic{@PythonEnvironmentCounter}}
%reset the PythonEnvironmentCounter when it encounter the chapter
\@addtoreset{@PythonEnvironmentCounter}{chapter}  %to zero

%here is hard to understand
\begingroup \catcode `|=0 \catcode `[=1
\catcode`]=2 \catcode `\{=12 \catcode `\}=12
\catcode`\\=12
|gdef|@xpython#1\end{python}[|immediate|write|@out[#1]|end[python]]
|endgroup


\newcommand\@showcode{%
\noindent input \@outname.py
\vspace{-\parskip}
\immediate\VerbatimInput[numbers=left,frame=lines,tabsize=4 ,baselinestretch=2,
    xleftmargin=6pt, fontsize=\footnotesize , numbersep=2pt]{\@outname.py}}

%definition writemodule
\newcommand\@writemodule{%
\immediate\openout\@module=latex.py
\immediate\write\@module{jobname="\@outname"}
\immediate\closeout\@module}



%error and rc
\newcommand\@writefeedback{%
% Read the return code of the executed Python script.
\immediate\openin\@retcode=\@outname.rc
\immediate\read\@retcode to \rc
\immediate\closein\@retcode

% If the return code isn't zero then include
% the traceback.
\ifnumequal{\rc}{0}{}{%
    \begingroup
        \color{red}
        \verbatiminput{\@outname.py.err}
    \endgroup
}}



\newcommand\@showresult{%
\vspace{-\parskip}
\noindent output \@outname.py.out
\vspace{-\parskip}
\immediate\VerbatimInput[numbers=left,frame=lines,tabsize=4 ,baselinestretch=2,
    xleftmargin=6pt, fontsize=\footnotesize , numbersep=2pt]{\@outname.py.out}}

\newcommand\@executepy{%
\immediate\write18{cat \@outname.py | /usr/bin/env python > \@outname.py.out 2> \@outname.py.err; echo -n $? > \@outname.rc}}

\newcommand\@executepyb{%
\immediate\write18{cat \@outname.py | /usr/bin/env python3 > \@outname.py.out 2> \@outname.py.err; echo -n $? > \@outname.rc}}


%environment start  %cancel the import file function

\newenvironment{python}[1]%
  {\def\@modestatus{#1} 
\immediate\openout\@out=\@outname.py
\newlinechar='15
\begingroup \catcode`\^^M=12 %
\let\do\@makeother\dospecials\obeyspaces%
\@xpython}
  {  \endgroup
  \immediate\closeout\@out
  %sorry i remove the windows support
  
\ifnum \@modestatus = 0   \@writemodule
 \else   \ifnum \@modestatus = 1   \@writemodule \@showcode
 \else       \ifnum \@modestatus = 12  \@writemodule  \@showcode \@executepy \@writefeedback
  \else           \ifnum \@modestatus = 124  \@writemodule  \@showcode \@executepy \@showresult \@writefeedback
  \else               \ifnum \@modestatus = 13  \@writemodule  \@showcode \@executepyb \@writefeedback
   \else                  \ifnum \@modestatus = 134  \@writemodule  \@showcode \@executepyb \@showresult \@writefeedback
    \else                     \ifnum \@modestatus = 14 \@writemodule  \@showcode  \@showresult
                            \else \errmessage{you typed wrong optional parameter,the choice is 1 12  124  13  134 14} 
                        \fi
                    \fi
                \fi
            \fi
        \fi
    \fi
\fi
              

\immediate\stepcounter{@PythonEnvironmentCounter}
  
}



\endinput
